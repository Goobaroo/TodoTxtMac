{"name":"TodoTxtMac","tagline":"TodoTxtMac is a minimalist, keyboard-driven to-do manager for Mac OS X (10.8 Mountain Lion and higher) that conforms to the todo.txt format spec.","body":"# TodoTxtMac\r\n\r\n# Overview\r\n\r\nTodoTxtMac is a minimalist, keyboard-driven to-do manager for Mac OS X (10.8 Mountain Lion and higher) that conforms to the todo.txt format spec.\r\n\r\n![TodoTxtMac Screenshot](http://mjdescy.github.io/TodoTxtMac/images/todotxtmac-screenshot.png)\r\n\r\n![TodoTxtMac Preferences Screenshot](http://mjdescy.github.io/TodoTxtMac/images/todotxtmac-screenshot-preferences.png)\r\n\r\n![TodoTxtMac Filters Screenshot](http://mjdescy.github.io/TodoTxtMac/images/todotxtmac-screenshot-filters.png)\r\n\r\n# Download\r\n\r\nDownload the latest release from the [Releases page][] on GitHub.\r\n\r\n[Releases page]: https://github.com/mjdescy/TodoTxtMac/releases\r\n\r\n\r\n# See it in action\r\n\r\n1. Watch a [short demo video][] on YouTube.\r\n2. [How to install TodoTxtMac][] (video instructions).\r\n\r\n[short demo video]: http://youtu.be/E2QOYDQH6MI\r\n[How to install TodoTxtMac]: http://youtu.be/pkjFQK2SGdE\r\n\r\n\r\n# Goals\r\n\r\nThis application is inspired by the [todotxt.net][] application for Microsoft Windows, with numerous improvements and modifications specific to the Mac OS X platform.\r\n\r\nFrom a design perspective, the goal is to be the fastest, simplest, and cleanest implementation possible.\r\n\r\n[todotxt.net]: http://benrhughes.github.io/todotxt.net/\r\n\r\n\r\n# Features\r\n\r\n## General features\r\n\r\n- Full compliance with the todo.txt format spec.\r\n- Fully keyboard-driven, with one-key bindings for commonly-used commands.\r\n- Multiple selection in the task list.\r\n- Support for due dates, which are formatted \"due:YYYY-MM-DD\".\r\n- Shortcuts to toggle completion, change priority, set due dates, and delete all selected tasks.\r\n- Archive completed tasks (to done.txt), either on command or automatically.\r\n- Preserves Windows or Unix line endings in the todo.txt file for cross-platform compatability.\r\n- Automatic update checking.\r\n\r\n## Adding/removing tasks\r\n\r\n- Paste one or more tasks into the task list from the clipboard.\r\n- Import one or more tasks into the task list via drag-and-drop.\r\n- Optionally prepend the task creation task on newly created tasks (including those pasted in from the clipboard).\r\n- Copy selected tasks to the clipboard.\r\n- Reload file on command.\r\n\r\n## Sorting and filtering\r\n\r\n- Sort task list by priority, project, context, due date, etc.\r\n- Filter task list.\r\n- Quick filters: preset filters mapped to number keys.\r\n- Search field for quick, ad-hoc filtering of the task list.\r\n\r\n## Due dates\r\n\r\n- Set arbitrary due dates on selected tasks.\r\n- Increment, decrement, or remove due dates.\r\n- Postpone tasks by X (user-entered) days.\r\n- Supports relative due dates, such as \"due:tomorrow\" and \"due:Saturday\" for new tasks. These strings can be localized.\r\n\r\n## Fonts and colors\r\n\r\n- User-customizable font for the task list.\r\n- Bold priorities in task list.\r\n- Colors completed tasks in light gray and applies strikethrough.\r\n- Colors overdue tasks in purple and tasks due today in red. Both these colors are user customizable.\r\n- Colors projects and contexts in dark gray in task list. Both these colors are user customizable.\r\n\r\n## Mac-specific user interface features\r\n\r\n- Autosave on change (Note that the title bar will say \"Edited\" even after autosaving, because this is the Mac's default behavior).\r\n- Autocomplete project names.\r\n- Autocomplete context names.\r\n- Multiple document interface.\r\n- Full screen mode.\r\n- Open todo.txt files by dragging and dropping them onto the application icon.\r\n\r\n\r\n# Keyboard Shortcuts\r\n\r\n## Working with tasks\r\n\r\n- n: new task\r\n- j: move down to next task\r\n- k: move up to previous task\r\n- x: toggle task completion\r\n- d or Backspace: delete task (with confirmation)\r\n- u or Enter: update task\r\n- p: postpone task by X (user-entered) days\r\n- s: set due date\r\n- i: set priority to user-entered value (A-Z)\r\n- t: append text to end of selected tasks\r\n- a: archive completed tasks (archive file done.txt must be set)\r\n- Command+Up: Increase priority\r\n- Command+Down: Decrease priority\r\n- Command+Left or Command+Right: Remove priority\r\n- Command+C: Copy selected tasks to the clipboard\r\n- Command+Shift+V: Paste tasks into the task list from the clipboard\r\n- Command+Option+Up: Increase due date by 1 day\r\n- Command+Option+Down: Decrease due date by 1 day\r\n- Command+Option+Left or Command+Option+Right: Remove due date\r\n\r\n## Working with files\r\n\r\n- Command+N: new file\r\n- Command+O: open file\r\n- Command+S: save file (forces the file to save immediately)\r\n- .: reload file\r\n\r\n## Sorting the task list\r\n\r\n- Command+0: order in file\r\n- Command+1: priority\r\n- Command+2: project\r\n- Command+3: context\r\n- Command+4: due date\r\n- Command+5: creation date\r\n- Command+6: completion date\r\n- Command+7: alphabetical\r\n\r\n## Filtering the task list\r\n\r\n- Command+F: find (moves focus to the search field)\r\n- f: define quick filters\r\n- 1: apply quick filter 1\r\n- 2: apply quick filter 2\r\n- 3: apply quick filter 3\r\n- 4: apply quick filter 4\r\n- 5: apply quick filter 5\r\n- 6: apply quick filter 6\r\n- 7: apply quick filter 7\r\n- 8: apply quick filter 8\r\n- 9: apply quick filter 9\r\n- 0: remove applied filter\r\n\r\n# Features Not Planned\r\n\r\n- This application is not meant for direct reordering of tasks in the todo.txt file.\r\n- This application does not retain blank lines in the todo.txt file.\r\n- This application does not support line breaks, long-form notes, attachments, or other features not part of the todo.txt format specification.\r\n\r\n# Frequently Asked Questions (FAQ)\r\n\r\n## Is there a preference to re-open my todo.txt file on launch?\r\n\r\nNo, there is no preference, but the application will do this automatically under normal circumstances. The default behavior of TodoTxtMac is to reopen whatever todo.txt files were open when you last quit the app. To enjoy this behavior, do not close your todo.txt file's window prior to quitting the app. This behavior is dependent on \r\n\r\nIf the TodoTxtMac is not reopening your files, or keeping a list of them in the \"File > Open Recent\" menu, then you should check the following preferences under System Preferences > General:\r\n\r\n1. \"Close windows when quitting an application\" must be unchecked.\r\n2. \"Recent items\" must not be \"None\".\r\n\r\n## Is this application Dropbox-enabled?\r\n\r\nNo. Unlike the official Todo.txt iOS application, this application does not call Dropbox's API. You can sync your file outside of TodoTxtMac via Dropbox or other services.\r\n\r\n## TodoTxtMac says my todo.txt file cannot be autosaved. The file has been changed by another application.\r\n\r\nYour todo.txt file can get modified outside of TodoTxtMac, especially if you are syncing the file via Dropbox or a similar service. TodoTxtMac uses Cocoa's default document object model to handle the file interactions. This means that the application will warn you of file changes that came from outside the application when you try to make changes to the file, not at the moment the file was changed. To avoid file conflicts, try the following strategies:\r\n\r\n1. Reload your TodoTxtMac file manually (press `.`) before making changes to it, if you believe the file was updated (by Dropbox for example) recently.\r\n2. Close TodoTxtMac when not using it for extended periods.\r\n3. When presented with the option to \"Save Anyway\" or \"Revert\" changes, always revert changes. You will have to re-do your last action in TodoTxtMac, but you will not lose the changes that originated outside the application.\r\n\r\n## Will this project be ported from Objective C to Swift?\r\n\r\nAt this time, there are no plans to move from Objective C to Swift.\r\n\r\n\r\n# License\r\n\r\nThis application is dual-licensed under the GNU General Public License and the MIT License. See LICENSE.txt for full license information.\r\n\r\n\r\n# Credits/Thanks\r\n\r\nThanks to Gina Tripani who created the [Todo.txt][] format and the community of developers who created the command line tools and iOS/Android apps.\r\n\r\nThanks to Ben Hughes whose Windows application [todotxt.net][] formed the basis of this application's design and feature set. Todotxt.net is a fantastic program and did not have an analog on the Mac. After starting my application, I contributed some patches to todotxt.net and am happy to be a contributor on such a great project.\r\n\r\nThanks to Josh Wright <@BendyTree> for his [RegExCategories][] library.\r\n\r\nThanks to kuba for the image used as the icon. Image Credit: [OK Icon][] from [Vector.me][] (by kuba).\r\n\r\nThanks to Andy Matuschak and the other contributors for the [Sparkle framework].\r\n\r\n[Todo.txt]: http://www.todotxt.com\r\n[RegExCategories]: https://github.com/bendytree/Objective-C-RegEx-Categories\r\n[OK Icon]: http://vector.me/browse/329308/ok_icon\r\n[Vector.me]: http://vector.me/\r\n[Sparkle framework]: http://sparkle.andymatuschak.org/","google":"UA-10779320-3","note":"Don't delete this file! It's used internally to help with page regeneration."}