{"name":"TodoTxtMac","tagline":"TodoTxtMac is a minimalist, keyboard-driven to-do manager for Mac OS X (10.8 Mountain Lion and higher) that conforms to the todo.txt format spec.","body":"# TodoTxtMac\r\n\r\n# Overview\r\n\r\nTodoTxtMac is a minimalist, keyboard-driven to-do manager for Mac OS X (10.8 Mountain Lion and higher) that conforms to the todo.txt format spec.\r\n\r\n![TodoTxtMac Screenshot](http://mjdescy.github.io/TodoTxtMac/images/todotxtmac-screenshot.png)\r\n\r\n![TodoTxtMac Preferences Screenshot](http://mjdescy.github.io/TodoTxtMac/images/todotxtmac-screenshot-preferences.png)\r\n\r\n![TodoTxtMac Filters Screenshot](http://mjdescy.github.io/TodoTxtMac/images/todotxtmac-screenshot-filters.png)\r\n# Download\r\n\r\nDownload the latest release from the [Releases page][] on GitHub.\r\n\r\n[Releases page]: https://github.com/mjdescy/TodoTxtMac/releases\r\n\r\n\r\n# See it in action\r\n\r\n1. Watch a [short demo video][] on YouTube.\r\n2. [How to install TodoTxtMac][] (video instructions).\r\n\r\n[short demo video]: http://youtu.be/E2QOYDQH6MI\r\n[How to install TodoTxtMac]: http://youtu.be/pkjFQK2SGdE\r\n\r\n\r\n# Goals\r\n\r\nThis application is inspired by the [todotxt.net][] application for Microsoft Windows, with numerous improvements and modifications specific to the Mac OS X platform.\r\n\r\nFrom a design perspective, the goal is to be the fastest, simplest, and cleanest implementation possible.\r\n\r\n[todotxt.net]: http://benrhughes.github.io/todotxt.net/\r\n\r\n\r\n# Features\r\n\r\n## General features\r\n\r\n- Full compliance with the todo.txt format spec.\r\n- Fully keyboard-driven, with one-key bindings for commonly-used commands.\r\n- Multiple selection in the task list.\r\n- Shortcuts to toggle completion, change priority, set due dates, and delete all selected tasks.\r\n- Archive completed tasks (to done.txt), either on command or automatically.\r\n- Preserves Windows or Unix line endings in the todo.txt file for cross-platform compatability.\r\n\r\n## Adding/removing tasks\r\n\r\n- Paste one or more tasks into the task list from the clipboard.\r\n- Import one or more tasks into the task list via drag-and-drop.\r\n- Optionally prepend the task creation task on newly created tasks (including those pasted in from the clipboard).\r\n- Copy selected tasks to the clipboard.\r\n- Reload file on command.\r\n\r\n## Sorting and filtering\r\n\r\n- Sort task list by priority, project, context, due date, etc.\r\n- Filter task list.\r\n- Quick filters: preset filters mapped to number keys.\r\n- Search field for quick, ad-hoc filtering of the task list.\r\n\r\n## Due dates\r\n\r\n- Set arbitrary due dates on selected tasks.\r\n- Increment, decrement, or remove due dates.\r\n- Postpone tasks by X (user-entered) days.\r\n- Supports relative due dates, such as \"due:tomorrow\" and \"due:Saturday\" for new tasks. These strings can be localized.\r\n\r\n## Fonts and colors\r\n\r\n- User-customizable font for the task list.\r\n- Bold priorities in task list.\r\n- Colors completed tasks in light gray and applies strikethrough.\r\n- Colors overdue tasks in purple and tasks due today in red. Both these colors are user customizable.\r\n- Colors projects and contexts in dark gray in task list. Both these colors are user customizable.\r\n\r\n## Mac-specific user interface features\r\n\r\n- Autosave on change. (Note that the title bar will say \"Edited\" even after autosaving, because this is the Mac's default behavior.)\r\n- Autocomplete project names.\r\n- Autocomplete context names.\r\n- Multiple document interface.\r\n- Full screen mode.\r\n- Open todo.txt files by dragging and dropping them onto the application icon.\r\n- Application is sandboxed to only read/write to your todo.txt files and your done.txt file.\r\n\r\n\r\n# Keyboard shortcuts\r\n\r\n## Working with tasks\r\n\r\n- n: new task\r\n- j: move down to next task\r\n- k: move up to previous task\r\n- x: toggle task completion\r\n- d or Backspace: delete task (with confirmation)\r\n- u or Enter: update task\r\n- p: postpone task by X (user-entered) days\r\n- s: set due date\r\n- a: archive completed tasks (archive file done.txt must be set)\r\n- Command+Up: Increase priority\r\n- Command+Down: Decrease priority\r\n- Command+Left or Command+Right: Remove priority\r\n- Command+C: Copy selected tasks to the clipboard\r\n- Command+Shift+V: Paste tasks into the task list from the clipboard\r\n- Command+Option+Up: Increase due date by 1 day\r\n- Command+Option+Down: Decrease due date by 1 day\r\n- Command+Option+Left or Command+Option+Right: Remove due date\r\n\r\n## Working with files\r\n\r\n- Command+N: new file\r\n- Command+O: open file\r\n- Command+S: save file (forces the file to save immediately)\r\n- .: reload file\r\n\r\n## Sorting the task list\r\n\r\n- Command+0: order in file\r\n- Command+1: priority\r\n- Command+2: project\r\n- Command+3: context\r\n- Command+4: due date\r\n- Command+5: creation date\r\n- Command+6: completion date\r\n- Command+7: alphabetical\r\n\r\n## Filtering the task list\r\n\r\n- f: define quick filters\r\n- 1: apply quick filter 1\r\n- 2: apply quick filter 2\r\n- 3: apply quick filter 3\r\n- 4: apply quick filter 4\r\n- 5: apply quick filter 5\r\n- 6: apply quick filter 6\r\n- 7: apply quick filter 7\r\n- 8: apply quick filter 8\r\n- 9: apply quick filter 9\r\n- 0: remove applied filter\r\n\r\n\r\n## Caveats/Features Not Planned\r\n\r\n- This application is not meant for direct reordering of tasks in the todo.txt file.\r\n- This application does not retain blank lines in the todo.txt file.\r\n\r\n# License\r\n\r\nThis application is dual-licensed under the GNU General Public License and the MIT License. See LICENSE.txt for full license information.\r\n\r\n\r\n# For Contributors\r\n\r\n## Source Code Conventions\r\n\r\nI am striving for very clean code. I am following the following general coding conventions:\r\n\r\n- For clarify, Limit nesting of brackets to two sets per line, as in: `[[thisString stringValue] isEqualToString:@\"otherStringValue\"]`\r\n- Maximum line length of 100 characters.\r\n- Indent with spaces rather than tabs.\r\n- Always use curly braces for conditionals and loops.\r\n- Use descriptive variable and method names.\r\n\r\n## Pull Requests\r\n\r\nThe project uses [git-flow] to implement Vincent Driessen's [branching model]. All pull requests should be directed at the \"develop\" branch.\r\n\r\n[git-flow]: https://github.com/nvie/gitflow\r\n[branching model]: http://nvie.com/posts/a-successful-git-branching-model/\r\n\r\n# Credits/Thanks\r\n\r\nThanks to Gina Tripani who created the [Todo.txt][] format and the community of developers who created the command line tools and iOS/Android apps.\r\n\r\nThanks to Ben Hughes whose Windows application [todotxt.net] formed the basis of this application's design and feature set. Todotxt.net is a fantastic program and did not have an analog on the Mac. After starting my application, I contributed some patches to todotxt.net and am happy to be a contributor on such a great project.\r\n\r\nThanks to Josh Wright <@BendyTree> for his [RegExCategories][] library.\r\n\r\nThanks to kuba for the image used as the icon. Image Credit: [OK Icon][] from [Vector.me][] (by kuba)\r\n\r\n[Todo.txt]: http://www.todotxt.com\r\n[RegExCategories]: https://github.com/bendytree/Objective-C-RegEx-Categories\r\n[OK Icon]: http://vector.me/browse/329308/ok_icon\r\n[Vector.me]: http://vector.me/","google":"UA-10779320-3","note":"Don't delete this file! It's used internally to help with page regeneration."}